// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from './client';
import type { GetEverythingData, GetEverythingResponses, GetEverythingErrors, GetTopHeadlinesData, GetTopHeadlinesResponses, GetTopHeadlinesErrors, GetSourcesData, GetSourcesResponses, GetSourcesErrors } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Search everything
 * Search through millions of articles from over 150,000 large and small news sources and blogs. This endpoint suits article discovery and analysis.
 */
export const getEverything = <ThrowOnError extends boolean = false>(options?: Options<GetEverythingData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetEverythingResponses, GetEverythingErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                name: 'X-Api-Key',
                type: 'apiKey'
            },
            {
                in: 'query',
                name: 'apiKey',
                type: 'apiKey'
            }
        ],
        url: '/everything',
        ...options
    });
};

/**
 * Get top headlines
 * This endpoint provides live top and breaking headlines for a country, specific category in a country, single source, or multiple sources. You can also search with keywords. Articles are sorted by the earliest date published first.
 */
export const getTopHeadlines = <ThrowOnError extends boolean = false>(options?: Options<GetTopHeadlinesData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetTopHeadlinesResponses, GetTopHeadlinesErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                name: 'X-Api-Key',
                type: 'apiKey'
            },
            {
                in: 'query',
                name: 'apiKey',
                type: 'apiKey'
            }
        ],
        url: '/top-headlines',
        ...options
    });
};

/**
 * Get sources
 * This endpoint returns the subset of news publishers that top headlines are available from. It's mainly a convenience endpoint that you can use to keep track of the publishers available on the API.
 */
export const getSources = <ThrowOnError extends boolean = false>(options?: Options<GetSourcesData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetSourcesResponses, GetSourcesErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                name: 'X-Api-Key',
                type: 'apiKey'
            },
            {
                in: 'query',
                name: 'apiKey',
                type: 'apiKey'
            }
        ],
        url: '/top-headlines/sources',
        ...options
    });
};