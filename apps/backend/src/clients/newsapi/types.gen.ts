// This file is auto-generated by @hey-api/openapi-ts

export type Article = {
    source: {
        /**
         * The identifier for the source
         */
        id?: string | null;
        /**
         * The display name for the source
         */
        name?: string;
    };
    /**
     * The author of the article
     */
    author?: string | null;
    /**
     * The headline or title of the article
     */
    title: string;
    /**
     * A description or snippet from the article
     */
    description?: string | null;
    /**
     * The direct URL to the article
     */
    url: string;
    /**
     * The URL to a relevant image for the article
     */
    urlToImage?: string | null;
    /**
     * The date and time that the article was published, in UTC (+000)
     */
    publishedAt: string;
    /**
     * The unformatted content of the article, where available. This is truncated to 200 chars.
     */
    content?: string | null;
};

export type Source = {
    /**
     * The identifier of the news source
     */
    id: string;
    /**
     * The name of the news source
     */
    name: string;
    /**
     * A description of the news source
     */
    description: string;
    /**
     * The URL of the homepage
     */
    url: string;
    /**
     * The type of news to expect from this news source
     */
    category: string;
    /**
     * The language that this news source writes in
     */
    language: string;
    /**
     * The country this news source is based in
     */
    country: string;
};

export type EverythingResponse = {
    /**
     * The status of the request
     */
    status: 'ok';
    /**
     * The total number of results available for your request
     */
    totalResults: number;
    /**
     * The results of the request
     */
    articles: Array<Article>;
};

export type TopHeadlinesResponse = {
    /**
     * The status of the request
     */
    status: 'ok';
    /**
     * The total number of results available for your request
     */
    totalResults: number;
    /**
     * The results of the request
     */
    articles: Array<Article>;
};

export type SourcesResponse = {
    /**
     * The status of the request
     */
    status: 'ok';
    /**
     * The results of the request
     */
    sources: Array<Source>;
};

export type ErrorResponse = {
    /**
     * The status of the request
     */
    status: 'error';
    /**
     * A short code identifying the type of error returned
     */
    code: 'apiKeyDisabled' | 'apiKeyExhausted' | 'apiKeyInvalid' | 'apiKeyMissing' | 'parameterInvalid' | 'parametersMissing' | 'rateLimited' | 'sourcesTooMany' | 'sourceDoesNotExist' | 'unexpectedError';
    /**
     * A fuller description of the error, usually including how to fix it
     */
    message: string;
};

export type GetEverythingData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Keywords or phrases to search for in the article title and body. Advanced search is supported. Max length: 500 chars.
         */
        q?: string;
        /**
         * The fields to restrict your q search to. Multiple options can be specified by separating them with a comma.
         */
        searchIn?: 'title' | 'description' | 'content' | 'title,description' | 'title,content' | 'description,content' | 'title,description,content';
        /**
         * A comma-separated string of identifiers (maximum 20) for the news sources or blogs you want headlines from.
         */
        sources?: string;
        /**
         * A comma-separated string of domains (eg bbc.co.uk, techcrunch.com, engadget.com) to restrict the search to.
         */
        domains?: string;
        /**
         * A comma-separated string of domains to remove from the results.
         */
        excludeDomains?: string;
        /**
         * A date and optional time for the oldest article allowed. This should be in ISO 8601 format (e.g. 2025-05-12 or 2025-05-12T06:47:40).
         */
        from?: string;
        /**
         * A date and optional time for the newest article allowed. This should be in ISO 8601 format (e.g. 2025-05-12 or 2025-05-12T06:47:40).
         */
        to?: string;
        /**
         * The 2-letter ISO-639-1 code of the language you want to get headlines for.
         */
        language?: 'ar' | 'de' | 'en' | 'es' | 'fr' | 'he' | 'it' | 'nl' | 'no' | 'pt' | 'ru' | 'sv' | 'ud' | 'zh';
        /**
         * The order to sort the articles in.
         */
        sortBy?: 'relevancy' | 'popularity' | 'publishedAt';
        /**
         * The number of results to return per page.
         */
        pageSize?: number;
        /**
         * Use this to page through the results.
         */
        page?: number;
        /**
         * Your API key. Alternatively you can provide this via the X-Api-Key HTTP header.
         */
        apiKey?: string;
    };
    url: '/everything';
};

export type GetEverythingErrors = {
    /**
     * Bad Request
     */
    400: ErrorResponse;
    /**
     * Unauthorized
     */
    401: ErrorResponse;
    /**
     * Too Many Requests
     */
    429: ErrorResponse;
    /**
     * Server Error
     */
    500: ErrorResponse;
};

export type GetEverythingError = GetEverythingErrors[keyof GetEverythingErrors];

export type GetEverythingResponses = {
    /**
     * Successful response
     */
    200: EverythingResponse;
};

export type GetEverythingResponse = GetEverythingResponses[keyof GetEverythingResponses];

export type GetTopHeadlinesData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * The 2-letter ISO 3166-1 code of the country you want to get headlines for. Note: you can't mix this param with the sources param.
         */
        country?: 'ae' | 'ar' | 'at' | 'au' | 'be' | 'bg' | 'br' | 'ca' | 'ch' | 'cn' | 'co' | 'cu' | 'cz' | 'de' | 'eg' | 'fr' | 'gb' | 'gr' | 'hk' | 'hu' | 'id' | 'ie' | 'il' | 'in' | 'it' | 'jp' | 'kr' | 'lt' | 'lv' | 'ma' | 'mx' | 'my' | 'ng' | 'nl' | 'no' | 'nz' | 'ph' | 'pl' | 'pt' | 'ro' | 'rs' | 'ru' | 'sa' | 'se' | 'sg' | 'si' | 'sk' | 'th' | 'tr' | 'tw' | 'ua' | 'us' | 've' | 'za';
        /**
         * The category you want to get headlines for. Note: you can't mix this param with the sources param.
         */
        category?: 'business' | 'entertainment' | 'general' | 'health' | 'science' | 'sports' | 'technology';
        /**
         * A comma-separated string of identifiers for the news sources or blogs you want headlines from. Note: you can't mix this param with the country or category params.
         */
        sources?: string;
        /**
         * Keywords or a phrase to search for.
         */
        q?: string;
        /**
         * The number of results to return per page (request). 20 is the default, 100 is the maximum.
         */
        pageSize?: number;
        /**
         * Use this to page through the results if the total results found is greater than the page size.
         */
        page?: number;
        /**
         * Your API key. Alternatively you can provide this via the X-Api-Key HTTP header.
         */
        apiKey?: string;
    };
    url: '/top-headlines';
};

export type GetTopHeadlinesErrors = {
    /**
     * Bad Request
     */
    400: ErrorResponse;
    /**
     * Unauthorized
     */
    401: ErrorResponse;
    /**
     * Too Many Requests
     */
    429: ErrorResponse;
    /**
     * Server Error
     */
    500: ErrorResponse;
};

export type GetTopHeadlinesError = GetTopHeadlinesErrors[keyof GetTopHeadlinesErrors];

export type GetTopHeadlinesResponses = {
    /**
     * Successful response
     */
    200: TopHeadlinesResponse;
};

export type GetTopHeadlinesResponse = GetTopHeadlinesResponses[keyof GetTopHeadlinesResponses];

export type GetSourcesData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Find sources that display news of this category.
         */
        category?: 'business' | 'entertainment' | 'general' | 'health' | 'science' | 'sports' | 'technology';
        /**
         * Find sources that display news in a specific language.
         */
        language?: 'ar' | 'de' | 'en' | 'es' | 'fr' | 'he' | 'it' | 'nl' | 'no' | 'pt' | 'ru' | 'sv' | 'ud' | 'zh';
        /**
         * Find sources that display news in a specific country.
         */
        country?: 'ae' | 'ar' | 'at' | 'au' | 'be' | 'bg' | 'br' | 'ca' | 'ch' | 'cn' | 'co' | 'cu' | 'cz' | 'de' | 'eg' | 'fr' | 'gb' | 'gr' | 'hk' | 'hu' | 'id' | 'ie' | 'il' | 'in' | 'it' | 'jp' | 'kr' | 'lt' | 'lv' | 'ma' | 'mx' | 'my' | 'ng' | 'nl' | 'no' | 'nz' | 'ph' | 'pl' | 'pt' | 'ro' | 'rs' | 'ru' | 'sa' | 'se' | 'sg' | 'si' | 'sk' | 'th' | 'tr' | 'tw' | 'ua' | 'us' | 've' | 'za';
        /**
         * Your API key. Alternatively you can provide this via the X-Api-Key HTTP header.
         */
        apiKey?: string;
    };
    url: '/top-headlines/sources';
};

export type GetSourcesErrors = {
    /**
     * Bad Request
     */
    400: ErrorResponse;
    /**
     * Unauthorized
     */
    401: ErrorResponse;
    /**
     * Too Many Requests
     */
    429: ErrorResponse;
    /**
     * Server Error
     */
    500: ErrorResponse;
};

export type GetSourcesError = GetSourcesErrors[keyof GetSourcesErrors];

export type GetSourcesResponses = {
    /**
     * Successful response
     */
    200: SourcesResponse;
};

export type GetSourcesResponse = GetSourcesResponses[keyof GetSourcesResponses];

export type ClientOptions = {
    baseUrl: 'https://newsapi.org/v2' | (string & {});
};